(()=>{"use strict";class e{constructor(e){this.name=e,this.todos=[],this.id}addToDo(e){this.todos.push(e)}removeToDo(e){const t=this.todos.findIndex((t=>t.id===e));this.todos.splice(t,1),console.log(this.todos)}setId(e){this.id=e}findToDoByID(e){const t=this.todos.findIndex((t=>t.id===e));return this.todos[t]}}class t{constructor(e,t,o,n){this.title=e,this.description=t,this.date=o,this.priority=n,this.isFinished=!1,this.id,this.parentId}markAsFinished(){this.isFinished=!1===this.isFinished}setId(e){this.id=e}setParentId(e){this.parentId=e}}new class{constructor(){}};const o=new class{constructor(){}renderToDo=e=>{const t=document.querySelector("ul"),o=document.createElement("li"),n=document.createElement("div"),i=document.createElement("div"),d=document.createElement("div"),r=document.createElement("div"),s=document.createElement("div"),c=document.createElement("div"),l=document.createElement("div");l.classList.add("title-element"),n.classList.add("todo"),l.textContent=e.title,n.classList.add(`${e.priority}`),r.textContent="delete",r.classList.add("delete"),s.classList.add("finish"),s.textContent="mark",c.classList.add("show-full"),c.textContent="+",d.classList.add("btns-container"),d.appendChild(c),d.appendChild(s),d.appendChild(r),n.appendChild(l),n.appendChild(d),o.appendChild(n),i.classList.add("todo-full"),i.classList.add("hidden"),i.insertAdjacentHTML("afterbegin",`\n    \n    <p>\n      Description: ${e.description}\n    </p>\n    <p>Date: ${e.date}</p>`),o.appendChild(i),o.setAttribute("data-id",`${e.id}`),t.appendChild(o)};renderForm(){if(document.querySelector(".new-form-container"))return;const e=document.querySelector(".container"),t=document.createElement("div");t.classList.add("new-form-container");const o=document.createElement("form");o.setAttribute("action","submit"),o.insertAdjacentHTML("afterbegin",'<div class="field">\n<label for="title">Title: </label>\n<input type="text" name="title" id="title" required/>\n</div>\n<div class="field">\n<label for="description">Description: </label>\n<input type="text" name="description" id="description" required/>\n</div>\n<div class="field">\n<label for="date">Date: </label>\n<input type="date" name="date" id="date" required/>\n</div>\n<div class="radio-btn">\n<label for="low-prio">Low</label>\n<input type="radio" name="priority" id="low-prio" value="low" />\n<label for="med-prio">Medium</label>\n<input type="radio" name="priority" id="med-prio" value="med" />\n<label for="high-prio">High</label>\n<input type="radio" name="priority" id="high-prio" value="high" checked/>\n</div>\n<button type="submit">Submit</button>\n<div class="close-form"><div class="x">X</div></div>\n'),t.appendChild(o),e.insertAdjacentElement("afterbegin",t),document.querySelector(".close-form").addEventListener("click",(function(){t.remove()}))}renderProjectPreview(e){const t=document.createElement("div");t.classList.add("project");const o=document.createElement("div");o.classList.add("project-preview"),console.log(e.name,e),o.textContent=`${e.name}`,t.setAttribute("data-id",`${e.id}`),t.appendChild(o),document.querySelector(".project-container").appendChild(t)}renderToDoPreview(e){console.log("render start");const t=document.createElement("div");t.classList.add("todo-preview"),t.textContent=`${e.title}`,document.querySelector(`.project[data-id='${e.parentId}']`).insertAdjacentElement("beforeend",t)}renderAllToDo(e){this.clearToDoList(),e.forEach((e=>this.renderToDo(e)))}clearToDoList(){document.querySelector(".todos-list ul").innerHTML=""}todoShow(e){console.log(e),e.classList.toggle("hidden")}renderAllProjectPreview(e){e.projects.forEach((e=>this.renderProjectPreview(e)))}rednerAllToDoPreview(e){console.log(e.projects),e.projects.forEach((e=>e.todos.forEach((e=>this.renderToDoPreview(e)))))}clearToDoPreview(){document.querySelectorAll(".todo-preview").forEach((e=>e.remove()))}toggleFinishedMark(e){e.querySelector(".title-element").classList.toggle("finished"),e.querySelector(".todo-full").classList.toggle("finished")}};console.log("START");const n=new class{constructor(){this.projects=[],this.activeProject,console.log(this.projects)}addProject(e){return this.projects.push(e),this.projects}removeProject(e){}},i=new e("Project Default"),d=new t("1","odin","today","low");d.parentId=1,d.setId(1);const r=new t("2","dva","today","low");r.parentId=1,r.setId(2),i.addToDo(d),i.addToDo(r),i.setId(1);const s=new e("Project 2"),c=new t("3","tri","today","high");c.parentId=2,s.addToDo(c),s.setId(2),n.addProject(i),n.addProject(s),n.activeProject=i;let l=n.activeProject;console.log(n),o.renderAllProjectPreview(n),o.rednerAllToDoPreview(n),o.renderAllToDo(l.todos);const a=document.querySelector(".new-todo-btn"),u=document.querySelector(".project-form"),p=document.querySelector("aside");a.addEventListener("click",(function(){o.renderForm(),document.querySelector("form").addEventListener("submit",m)}));const m=function(e){e.preventDefault();const{title:n,description:i,date:d,priority:r}=Object.fromEntries(new FormData(this)),s=new t(n,i,d,r);s.setId(l.todos.length+1),s.setParentId(l.id),l.addToDo(s),o.renderToDo(...l.todos.slice(-1)),console.log(l.todos.slice(-1)),o.renderToDoPreview(s)};document.querySelector("ul").addEventListener("click",(e=>{const t=e.target.closest(".delete");if(!t)return;const i=t.closest("li");l.removeToDo(+i.dataset.id),i.remove(),o.clearToDoPreview(),o.rednerAllToDoPreview(n)})),u.addEventListener("submit",(function(t){t.preventDefault();const i=this.querySelector("input").value;console.log(i),console.log("clickclack");const d=new e(i);d.setId(n.projects.length+1),n.addProject(d),this.querySelector("input").value="",console.log(n.projects),console.log(n),o.renderProjectPreview(d)})),p.addEventListener("click",(function(e){const t=e.target.closest(".project-preview");t&&t.textContent!==l.name&&(console.log("project selected"),console.log(t),l=n.projects.find((e=>e.name===t.textContent)),console.log(l),o.renderAllToDo(l.todos),console.log(l.todos),console.log(n))})),document.querySelector("ul").addEventListener("click",(function(e){const t=e.target.closest(".show-full");t&&(console.log(t),t.textContent="+"===t.textContent?"-":"+",o.todoShow(t.closest(".todo").nextSibling))})),document.querySelector("ul").addEventListener("click",(function(e){const t=e.target.closest(".finish");if(!t)return;const n=t.closest("li");console.log(n.dataset.id),console.log(l.findToDoByID(+n.dataset.id)),l.findToDoByID(+n.dataset.id).markAsFinished(),o.toggleFinishedMark(n)}));const h=JSON.stringify(n),v=JSON.parse(h);console.log(JSON.parse(h)),console.log(h),v.projects.forEach((t=>Object.assign(t,new e))),console.log(v)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,