(()=>{"use strict";class e{constructor(){this.projects=[],this.activeProject}addProject(e){return this.projects.push(e),this.projects}removeProject(){console.log(this.projects);const e=this.projects.findIndex((e=>e.name===this.activeProject.name));this.projects.splice(e,1),console.log(this.projects)}}class t{constructor(e){this.name=e,this.todos=[],this.id}addToDo(e){this.todos.push(e)}removeToDo(e){const t=this.todos.findIndex((t=>t.id===e));this.todos.splice(t,1)}setId(e){this.id=e}findToDoByID(e){const t=this.todos.findIndex((t=>t.id===e));return this.todos[t]}}class o{constructor(e,t,o,s){this.title=e,this.description=t,this.date=o,this.priority=s,this.isFinished=!1,this.id,this.parentId}markAsFinished(){this.isFinished=!1===this.isFinished}setId(e){this.id=e}setParentId(e){this.parentId=e}}new class{constructor(){}};const s=()=>Math.floor(999999999999998*Math.random()+1),i=new class{constructor(){}renderToDo=e=>{const t=document.querySelector("ul"),o=document.createElement("li"),s=document.createElement("div"),i=document.createElement("div"),r=document.createElement("div"),n=document.createElement("div"),d=document.createElement("div"),c=document.createElement("div"),a=document.createElement("div");a.classList.add("title-element"),s.classList.add("todo"),a.textContent=e.title,e.isFinished&&a.classList.add("finished"),s.classList.add(`${e.priority}`),n.textContent="delete",n.classList.add("delete"),d.classList.add("finish"),d.textContent="mark",c.classList.add("show-full"),c.textContent="+",r.classList.add("btns-container"),r.appendChild(c),r.appendChild(d),r.appendChild(n),s.appendChild(a),s.appendChild(r),o.appendChild(s),i.classList.add("todo-full"),i.classList.add("hidden"),i.classList.add(e.isFinished?"finished":"nope"),i.insertAdjacentHTML("afterbegin",`\n    \n    <p>\n      Description: ${e.description}\n    </p>\n    <p>Date: ${e.date}</p>`),o.appendChild(i),o.setAttribute("data-id",`${e.id}`),t.appendChild(o)};renderForm(){if(document.querySelector(".new-form-container"))return;const e=document.querySelector(".container"),t=document.createElement("div");t.classList.add("new-form-container");const o=document.createElement("form");o.setAttribute("action","submit"),o.insertAdjacentHTML("afterbegin",'<div class="field">\n<label for="title">Title: </label>\n<input type="text" name="title" id="title" required/>\n</div>\n<div class="field">\n<label for="description">Description: </label>\n<input type="text" name="description" id="description" required/>\n</div>\n<div class="field">\n<label for="date">Date: </label>\n<input type="date" name="date" id="date" required/>\n</div>\n<div class="radio-btn">\n<label for="low-prio">Low</label>\n<input type="radio" name="priority" id="low-prio" value="low" />\n<label for="med-prio">Medium</label>\n<input type="radio" name="priority" id="med-prio" value="med" />\n<label for="high-prio">High</label>\n<input type="radio" name="priority" id="high-prio" value="high" checked/>\n</div>\n<button type="submit">Submit</button>\n<div class="close-form"><div class="x">X</div></div>\n'),t.appendChild(o),e.insertAdjacentElement("afterbegin",t),document.querySelector(".close-form").addEventListener("click",(function(){t.remove()}))}renderProjectPreview(e){const t=document.createElement("div");t.classList.add("project");const o=document.createElement("div");o.classList.add("project-preview"),o.textContent=`${e.name}`,t.setAttribute("data-id",`${e.id}`),t.appendChild(o),document.querySelector(".project-container").appendChild(t)}renderToDoPreview(e){const t=document.createElement("div");t.classList.add("todo-preview"),t.textContent=`${e.title}`,e.isFinished&&t.classList.add("finished-preview"),t.setAttribute("data-parent",`${e.parentId}`),document.querySelector(`.project[data-id='${e.parentId}']`).insertAdjacentElement("beforeend",t)}renderAllToDo(e){this.clearToDoList(),e.forEach((e=>this.renderToDo(e)))}clearToDoList(){document.querySelector(".todos-list ul").innerHTML=""}todoShow(e){e.classList.toggle("hidden")}renderAllProjectPreview(e){e.projects.forEach((e=>this.renderProjectPreview(e)))}rednerAllToDoPreview(e){for(let t=0;t<e.projects.length;t++)e.projects[t].todos.forEach((e=>this.renderToDoPreview(e)))}clearToDoPreview(){document.querySelectorAll(".todo-preview").forEach((e=>e.remove()))}toggleFinishedMark(e){e.querySelector(".title-element").classList.toggle("finished"),e.querySelector(".todo-full").classList.toggle("finished")}clearAllProjectPreview(){document.querySelectorAll(".project").forEach((e=>e.remove()))}},r=function(e){e.preventDefault();const{title:t,description:r,date:a,priority:l}=Object.fromEntries(new FormData(this)),p=new o(t,r,a,l);p.setId(s()),p.setParentId(c.id),c.addToDo(p),i.renderToDo(...c.todos.slice(-1)),d.saveData(n),i.renderToDoPreview(p)};console.log("START");let n=new e;const d=new class{constructor(e){this.base=e,this.projects=e.projects,this.todos=this.projects.map((e=>e.todos)),this.baseResult}getToDos(e){this.todos=this.projects.map((e=>e.todos));const t=JSON.parse(e),s=JSON.parse(e);for(let e=0;e<t.length;e++)t[e]=t[e].map((e=>new o(e.title,e.description,e.date,e.priority)));for(let e=0;e<t.length;e++)t[e]=t[e].map(((t,o)=>Object.assign(t,s[e][o])));return t}getProjects(e){let o=JSON.parse(e);return o.map((e=>new t(e.name))).map(((e,t)=>Object.assign(e,o[t])))}getBase(t){const o=JSON.parse(t);let s=new e;return s=Object.assign(s,o),s}saveData(e){const t=JSON.stringify(e),o=JSON.stringify(e.projects),s=JSON.stringify(e.projects.map((e=>e.todos)));localStorage.setItem("base",t),localStorage.setItem("projects",o),localStorage.setItem("todos",s);const i=this.getBase(t),r=this.getProjects(o),n=this.getToDos(s);for(let e=0;e<r.length;e++)r[e].todos=n[e];return i.projects=r,i.activeProject=i.projects[0],i}loadData(){const e=this.getBase(localStorage.getItem("base")),t=this.getProjects(localStorage.getItem("projects")),o=this.getToDos(localStorage.getItem("todos"));for(let e=0;e<t.length;e++)t[e].todos=o[e];return e.projects=t,e.activeProject=e.projects[0],e}}(n);(()=>{const e=new t("Project Default"),s=new o("Gogogo","odin","today","low");s.parentId=1,s.setId(1),e.addToDo(s),e.setId(1),n.addProject(e),n.activeProject=n.projects[0]})();let c=n.activeProject;n=localStorage.getItem("base")&&"[]"!==localStorage.getItem("projects")?d.loadData():n,c=n.activeProject,i.renderAllProjectPreview(n),i.rednerAllToDoPreview(n),i.renderAllToDo(c.todos);const a=document.querySelector(".check-project"),l=document.querySelector(".new-todo-btn"),p=document.querySelector(".project-form"),u=document.querySelector("aside"),h=document.querySelector(".delete-project");l.addEventListener("click",(function(){i.renderForm(),document.querySelector("form").addEventListener("submit",r)})),document.querySelector("ul").addEventListener("click",(function(e){const t=e.target.closest(".delete");if(!t)return;const o=t.closest("li");c.removeToDo(+o.dataset.id),o.remove(),i.clearToDoPreview(),i.rednerAllToDoPreview(n),d.saveData(n)})),p.addEventListener("submit",(function(e){e.preventDefault();const o=this.querySelector("input").value,r=new t(o);r.setId(s()),n.addProject(r),this.querySelector("input").value="",i.renderProjectPreview(r)})),u.addEventListener("click",(function(e){const t=e.target.closest(".project-preview");t&&t.textContent!==c.name&&(c=n.projects.find((e=>e.name===t.textContent)),n.activeProject=c,l.classList.contains("hidden")&&l.classList.remove("hidden"),a.classList.contains("hidden")||a.classList.add("hidden"),i.renderAllToDo(c.todos))})),document.querySelector("ul").addEventListener("click",(function(e){const t=e.target.closest(".show-full");t&&(t.textContent="+"===t.textContent?"-":"+",i.todoShow(t.closest(".todo").nextSibling))})),document.querySelector("ul").addEventListener("click",(function(e){const t=e.target.closest(".finish");if(!t)return;const o=t.closest("li");c.findToDoByID(+o.dataset.id).markAsFinished(),i.toggleFinishedMark(o),i.clearToDoPreview(),i.rednerAllToDoPreview(n),d.saveData(n)})),h.addEventListener("click",(function(){n.removeProject(),i.clearAllProjectPreview(),i.renderAllProjectPreview(n),i.rednerAllToDoPreview(n),i.clearToDoList(),d.saveData(n),l.classList.add("hidden"),a.classList.remove("hidden")})),u.addEventListener("click",(function(e){const t=e.target.closest(".todo-preview");t&&(c=n.projects.find((e=>e.id===+t.dataset.parent)),n.activeProject=c,l.classList.contains("hidden")&&l.classList.remove("hidden"),a.classList.contains("hidden")||a.classList.add("hidden"),i.renderAllToDo(c.todos))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,